"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[924],{6904:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>d});var s=r(4848),i=r(8453);const a={id:"variables",title:"Variables"},l="Variables",c={id:"variables",title:"Variables",description:"- Accessing Variables",source:"@site/docs/variables.mdx",sourceDirName:".",slug:"/variables",permalink:"/docs/variables",draft:!1,unlisted:!1,editUrl:"https://github.com/puzzlet-ai/templatedx-docs/edit/main/docs/variables.mdx",tags:[],version:"current",frontMatter:{id:"variables",title:"Variables"},sidebar:"docs",previous:{title:"FAQ",permalink:"/docs/faq"},next:{title:"Expressions",permalink:"/docs/expressions"}},t={},d=[{value:"Accessing Variables",id:"accessing-variables",level:2},{value:"Dot Notation",id:"dot-notation",level:4},{value:"Bracket Syntax",id:"bracket-syntax",level:4},{value:"Error Handling",id:"error-handling",level:2},{value:"Examples",id:"examples",level:2},{value:"Accessing a Defined Variable",id:"accessing-a-defined-variable",level:4},{value:"Accessing Nested Properties",id:"accessing-nested-properties",level:4},{value:"Using Bracket Syntax for Dynamic Properties",id:"using-bracket-syntax-for-dynamic-properties",level:4},{value:"Error Scenario: Undefined Variable",id:"error-scenario-undefined-variable",level:4}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"variables",children:"Variables"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#accessing-variables",children:"Accessing Variables"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#dot-notation",children:"Dot Notation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#bracket-syntax",children:"Bracket Syntax"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#error-handling",children:"Error Handling"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#examples",children:"Examples"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"accessing-variables",children:"Accessing Variables"}),"\n",(0,s.jsx)(n.h4,{id:"dot-notation",children:"Dot Notation"}),"\n",(0,s.jsx)(n.p,{children:"Use dot notation to access object properties within the template context, similar to JavaScript."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{ props.username }\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"bracket-syntax",children:"Bracket Syntax"}),"\n",(0,s.jsx)(n.p,{children:"Bracket syntax allows access to object properties using string keys, which is useful for dynamic or complex property names."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{ props['user-name'] }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.p,{children:"Accessing an undefined or null variable will throw an error, ensuring that all variables used are explicitly defined."}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{ props.undefinedVar }\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will result in an error: \"Undefined variable 'undefinedVar' in template.\""}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h4,{id:"accessing-a-defined-variable",children:"Accessing a Defined Variable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{ props.username }\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Alice"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"accessing-nested-properties",children:"Accessing Nested Properties"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{ props.user.firstName } { props.user.lastName }\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Alice Johnson"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"using-bracket-syntax-for-dynamic-properties",children:"Using Bracket Syntax for Dynamic Properties"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{ props['user-email'] }\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"mailto:alice.johnson@example.com",children:"alice.johnson@example.com"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"error-scenario-undefined-variable",children:"Error Scenario: Undefined Variable"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{ props.user.address.street }\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Error:"})," Cannot read property 'street' of undefined in template."]}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>c});var s=r(6540);const i={},a=s.createContext(i);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);