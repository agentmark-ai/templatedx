"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[235],{4050:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>l});var o=t(4848),a=t(8453);const i={title:"Overview"},r="What is TemplateDX?",d={id:"overview",title:"Overview",description:"TemplateDX is a declarative, extensible, and composable type-safe templating engine based on Markdown and JSX.",source:"@site/docs/overview.mdx",sourceDirName:".",slug:"/overview",permalink:"/templatedx/docs/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/puzzlet-ai/templatedx-docs/edit/main/docs/overview.mdx",tags:[],version:"current",frontMatter:{title:"Overview"},sidebar:"docs",previous:{title:"Getting Started",permalink:"/templatedx/docs/getting-started"},next:{title:"FAQ",permalink:"/templatedx/docs/faq"}},s={},l=[{value:"What does it look like?",id:"what-does-it-look-like",level:2},{value:"Why extend Markdown?",id:"why-extend-markdown",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"what-is-templatedx",children:"What is TemplateDX?"})}),"\n",(0,o.jsxs)(n.p,{children:["TemplateDX is a declarative, extensible, and composable type-safe templating engine based on Markdown and JSX.\nIt was originally developed by Puzzlet for ",(0,o.jsx)(n.a,{href:"https://github.com/puzzlet-ai/promptdx",children:"PromptDX"}),"\nto enhance the developer experience for applications built with large language models (LLMs). It is inspired by MDX."]}),"\n",(0,o.jsx)(n.h2,{id:"what-does-it-look-like",children:"What does it look like?"}),"\n",(0,o.jsx)(n.p,{children:"TemplateDX primarily looks like what you would expect with Markdown and JSX."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"---\nname: Markdown w/ JSX and Frontmatter\nauthor: Ryan\n---\n\nimport SomeMarkdownComponent from './my-md-component.md';\nimport SomeMDXComponent from './my-mdx-component.mdx';\n\n# Hello World\n\n> TemplateDX uses Markdown to make it readable.\n\n[\u2014 Markdown](https://www.markdownguide.org/basic-syntax/).\n\n\n## Table\n\nHere's a table\n\n| Item              | In Stock | Price |\n| :---------------- | :------: | ----: |\n| Python Hat        |   True   | 23.99 |\n| SQLHat            |   True   | 23.99 |\n| Codecademy Tee    |   False  | 19.99 |\n| Codecademy Hoodie |   False  | 42.99 |\n\n## Components\n\n<SomeMarkdownComponent />\n\n<SomeMDXComponent title=\"Demo\" />\n\n## Tags\n\n<If condition={props.isAwesome}>\n  **TemplateDX Is Awesome!**\n</If>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"why-extend-markdown",children:"Why extend Markdown?"}),"\n",(0,o.jsx)(n.p,{children:"TemplateDX extends Markdown's familiar syntax to support complex, structured content needs.\nMarkdown works well for basic content but lacks the flexibility needed for templating, composable components,\nand organized content. TemplateDX introduces custom components and templating capabilities, enabling document composability,\nconditional rendering, and variable interpolation while maintaining Markdown\u2019s readability and simplicity.\nThis approach offers a powerful tool for creating dynamic, content-rich documents."})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var o=t(6540);const a={},i=o.createContext(a);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);